[{"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Companies\\Companies.js":"1","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Users\\users.js":"2","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Ammuninition\\Ammunation.js":"3","G:\\newlearnone\\Software_eng\\ui\\src\\api\\utils.js":"4","G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\auth.js":"5","G:\\newlearnone\\Software_eng\\ui\\src\\store\\reducers\\auth.js":"6","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Stations\\Stations.js":"7","G:\\newlearnone\\Software_eng\\ui\\src\\api\\Stations.js":"8","G:\\newlearnone\\Software_eng\\ui\\src\\App.js":"9","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\UserTable.js":"10","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\StationsTable.js":"11","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Auth\\auth.js":"12","G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\alert.js":"13","G:\\newlearnone\\Software_eng\\ui\\src\\api\\UsersAPI.js":"14","G:\\newlearnone\\Software_eng\\ui\\src\\axios-SE.js":"15","G:\\newlearnone\\Software_eng\\ui\\src\\api\\CompaniesAPI.js":"16","G:\\newlearnone\\Software_eng\\ui\\src\\api\\WeaponsAPI.js":"17","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Weapons\\Weapons.js":"18","G:\\newlearnone\\Software_eng\\ui\\src\\api\\AmmunitionAPI.js":"19","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\Ammunitiontable.js":"20","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\WeaponsTable.js":"21","G:\\newlearnone\\Software_eng\\ui\\src\\shared\\routes.js":"22","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\RecoveryTable.js":"23","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Recovery\\Recovery.js":"24","G:\\newlearnone\\Software_eng\\ui\\src\\api\\RecoverAPI.js":"25","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\CompaniesTable.js":"26","G:\\newlearnone\\Software_eng\\ui\\src\\index.js":"27","G:\\newlearnone\\Software_eng\\ui\\src\\store\\reducers\\alert.js":"28","G:\\newlearnone\\Software_eng\\ui\\src\\helpers\\tableIcons.js":"29"},{"size":3380,"mtime":1610801814263,"results":"30","hashOfConfig":"31"},{"size":3837,"mtime":1610876222403,"results":"32","hashOfConfig":"31"},{"size":2507,"mtime":1610877574713,"results":"33","hashOfConfig":"31"},{"size":1217,"mtime":1610869947780,"results":"34","hashOfConfig":"31"},{"size":3135,"mtime":1610869269417,"results":"35","hashOfConfig":"31"},{"size":1673,"mtime":1610868639195,"results":"36","hashOfConfig":"31"},{"size":2901,"mtime":1610866629401,"results":"37","hashOfConfig":"31"},{"size":416,"mtime":1610866519140,"results":"38","hashOfConfig":"31"},{"size":1366,"mtime":1610878021558,"results":"39","hashOfConfig":"31"},{"size":6330,"mtime":1610887903857,"results":"40","hashOfConfig":"31"},{"size":6291,"mtime":1610887897273,"results":"41","hashOfConfig":"31"},{"size":6314,"mtime":1610868721626,"results":"42","hashOfConfig":"31"},{"size":309,"mtime":1609730397622,"results":"43","hashOfConfig":"31"},{"size":401,"mtime":1610614556458,"results":"44","hashOfConfig":"31"},{"size":160,"mtime":1610477837633,"results":"45","hashOfConfig":"31"},{"size":434,"mtime":1610612601414,"results":"46","hashOfConfig":"31"},{"size":421,"mtime":1610870170682,"results":"47","hashOfConfig":"31"},{"size":2536,"mtime":1610876685483,"results":"48","hashOfConfig":"31"},{"size":437,"mtime":1610877033905,"results":"49","hashOfConfig":"31"},{"size":6909,"mtime":1610889999793,"results":"50","hashOfConfig":"31"},{"size":6690,"mtime":1610887915932,"results":"51","hashOfConfig":"31"},{"size":263,"mtime":1610877905999,"results":"52","hashOfConfig":"31"},{"size":6694,"mtime":1610887891777,"results":"53","hashOfConfig":"31"},{"size":4199,"mtime":1610880639065,"results":"54","hashOfConfig":"31"},{"size":426,"mtime":1610880586955,"results":"55","hashOfConfig":"31"},{"size":6035,"mtime":1610887861162,"results":"56","hashOfConfig":"31"},{"size":1230,"mtime":1610353636239,"results":"57","hashOfConfig":"31"},{"size":1011,"mtime":1609730397623,"results":"58","hashOfConfig":"31"},{"size":2256,"mtime":1610297300436,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sd8tc0",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Companies\\Companies.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Users\\users.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Ammuninition\\Ammunation.js",["122"],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\utils.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\auth.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\reducers\\auth.js",[],["123","124"],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Stations\\Stations.js",["125","126"],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\Stations.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\App.js",[],["127","128"],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\UserTable.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\StationsTable.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Auth\\auth.js",["129"],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\alert.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\UsersAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\axios-SE.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\CompaniesAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\WeaponsAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Weapons\\Weapons.js",["130"],"import React , {useState, useEffect, useCallback} from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport {getAllWeapons,updateWeapons  } from \"../../api/WeaponsAPI\"\r\nimport {replaceItemInArray} from \"../../shared/utility\";\r\nimport Table from \"../../components/UI/Table/MaterialTable/Table\";\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst WeaponTable = \"Weapons Table\";\r\n\r\nconst tableOptions = {\r\n  pageSize: 10,\r\n  pageSizeOptions: [10, 30, 50]\r\n};\r\n\r\nconst Weapons = props => {\r\n  console.log(props.stationID);\r\n  const [weapons, setWeapons] = useState([]);\r\n  useEffect(() => {\r\n    getAllWeapons(props.stationID)\r\n        .then((response) => {\r\n          console.log(response.data);\r\n          if (!response.error) {\r\n            // (response.data).forEach(user => setUsers(user));\r\n            setWeapons(response.data)\r\n          }\r\n        })\r\n  }, []);\r\n  const { addAlert } = props;\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n\r\n\r\n  const updateWeapon = useCallback(\r\n    (newWeapon,oldWeapon) => {\r\n      return new Promise((resolve, reject) => {\r\n        updateWeapons(oldWeapon.weaponID, newWeapon)\r\n              .then((response) => {\r\n                  if (!response.error) {\r\n                      addAlert({\r\n                          message: \"Weapon Updated Successfully!\",\r\n                      });\r\n                      setWeapons(replaceItemInArray(weapons, 'weaponID', newWeapon, oldWeapon.weaponID))\r\n                      return resolve();\r\n                  }\r\n                  return reject();\r\n              })\r\n      });\r\n    },\r\n    [addAlert, weapons]\r\n  );\r\n  \r\n  const tableColumns = [\r\n    { title: \"weapon ID\", field: \"weaponID\" },\r\n    { title: \"Assigned\", field: \"assigned\" },\r\n    { title: \"Assigned Date\", field: \"assignedDate\" },\r\n    { title: \"Weapon ID\", field: \"weaponID\" },\r\n  ];\r\n\r\n  if (false) {\r\n    //return <Spinner />\r\n  } else {\r\n    return <Table\r\n      data={weapons}\r\n      title={WeaponTable}\r\n      columns={tableColumns}\r\n      tableOptions={tableOptions}\r\n      editable={{\r\n        onRowUpdate: (newData, oldData) =>updateWeapon(newData, oldData ),\r\n      }}\r\n    />\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      error: state.auth.error,\r\n      stationID:state.auth.stationID,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addAlert: alert => dispatch(actions.addAlert(alert))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Weapons);\r\n\r\n//export default (Weapons);\r\n","G:\\newlearnone\\Software_eng\\ui\\src\\api\\AmmunitionAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\Ammunitiontable.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\WeaponsTable.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\shared\\routes.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\RecoveryTable.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Recovery\\Recovery.js",["131","132","133"],"import React , {useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport {getAllRecovery, deleteRecovery, updateRecovery, saveRecovery } from \"../../api/RecoverAPI\"\r\nimport {replaceItemInArray, removeItemFromArray, addItemToArray} from \"../../shared/utility\";\r\nimport Table from \"../../components/UI/Table/MaterialTable/Table\";\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst ReoveryTable = \"Recovery Table\";\r\n\r\nconst tableOptions = {\r\n  pageSize: 10,\r\n  pageSizeOptions: [10, 30, 50]\r\n};\r\n\r\nconst Users = props => {\r\n\r\n  const [recovery, setRecovery] = useState([]);\r\n  useEffect(() => {\r\n    getAllRecovery(props.stationID)\r\n        .then((response) => {\r\n          if (!response.error) {\r\n            // (response.data).forEach(user => setUsers(user));\r\n            console.log(response)\r\n            setRecovery(response.data)\r\n          }\r\n        })\r\n  }, []);\r\n   const { addAlert } = props;\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const deleteRecoveries = useCallback(\r\n    (oldWeapon) => {\r\n      return new Promise((resolve, reject) => {\r\n        deleteRecovery(oldWeapon.id)\r\n              .then((response) => {\r\n                console.log(response);\r\n                  if (!response.error) {\r\n                      addAlert({\r\n                          message: \"Weapon deletion Successful!\",\r\n                      });\r\n                      setRecovery(removeItemFromArray(recovery, 'id', oldWeapon.id, oldWeapon))\r\n                      return resolve();\r\n                  }\r\n                  return reject();\r\n              })\r\n      });\r\n    },\r\n    [addAlert, recovery]\r\n  );\r\n\r\n  const updateRecoveries = useCallback(\r\n    (newWeapon,oldWeapon) => {\r\n      return new Promise((resolve, reject) => {\r\n        updateRecovery(oldWeapon.id, newWeapon)\r\n              .then((response) => {\r\n                  if (!response.error) {\r\n                      addAlert({\r\n                          message: \"Weapon Updated Successfully!\",\r\n                      });\r\n                      setRecovery(replaceItemInArray(recovery, 'officerID', newWeapon, oldWeapon.id))\r\n                      return resolve();\r\n                  }\r\n                  return reject();\r\n              })\r\n      });\r\n    },\r\n    [addAlert, recovery]\r\n  );\r\n\r\n  // const saveRecoveries = useCallback(\r\n  //   (newUser) => {\r\n  //     var data=({\r\n  //       \"officerID\": newUser.officerID,\r\n  //       \"name\": newUser.name,\r\n  //       \"location\": newUser.location,\r\n  //       \"stationID\": newUser.stationID,\r\n  //     })\r\n  //     return new Promise((resolve, reject) => {\r\n  //       saveRecovery(data)\r\n  //             .then((response) => {\r\n  //                 if (!response.error) {\r\n  //                     addAlert({\r\n  //                         message: \"User Saved Successfully!\",\r\n  //                     });\r\n  //                     setRecovery(addItemToArray(recovery, data))\r\n  //                     return resolve();\r\n  //                 }\r\n  //                 return reject();\r\n  //             })\r\n  //       });\r\n  //   },\r\n  //   [addAlert, recovery]\r\n  // );\r\n  \r\n\r\n  const tableColumns = [\r\n    { title: \"Recovery ID\", field: \"recoveryID\" },\r\n    { title: \"Recovery Date\", field: \"recoveryDate\" },\r\n    { title: \"Description\", field: \"description\" },\r\n    { title: \"ststion Id\", field: \"stationID\" },\r\n  ];\r\n\r\n  if (false) {\r\n    //return <Spinner />\r\n  } else {\r\n    return <Table\r\n      data={recovery}\r\n      title={ReoveryTable}\r\n      columns={tableColumns}\r\n      tableOptions={tableOptions}\r\n      editable={{\r\n        // onRowAdd: newData =>saveRecoveries(newData),\r\n        onRowUpdate: (newData, oldData) =>updateRecoveries(newData, oldData ),\r\n        onRowDelete: oldData => deleteRecoveries(oldData),\r\n      }}\r\n    />\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      error: state.auth.error,\r\n      stationID:state.auth.stationID,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addAlert: alert => dispatch(actions.addAlert(alert))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\r\n\r\n// export default (Users);\r\n","G:\\newlearnone\\Software_eng\\ui\\src\\api\\RecoverAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\CompaniesTable.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\index.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\reducers\\alert.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\helpers\\tableIcons.js",[],{"ruleId":"134","severity":1,"message":"135","line":29,"column":4,"nodeType":"136","endLine":29,"endColumn":6,"suggestions":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":45,"column":9,"nodeType":"144","messageId":"145","endLine":45,"endColumn":22},{"ruleId":"142","severity":1,"message":"146","line":60,"column":9,"nodeType":"144","messageId":"145","endLine":60,"endColumn":20},{"ruleId":"138","replacedBy":"147"},{"ruleId":"140","replacedBy":"148"},{"ruleId":"134","severity":1,"message":"149","line":125,"column":8,"nodeType":"136","endLine":125,"endColumn":51,"suggestions":"150"},{"ruleId":"134","severity":1,"message":"135","line":28,"column":6,"nodeType":"136","endLine":28,"endColumn":8,"suggestions":"151"},{"ruleId":"142","severity":1,"message":"152","line":4,"column":57,"nodeType":"144","messageId":"145","endLine":4,"endColumn":69},{"ruleId":"142","severity":1,"message":"153","line":5,"column":50,"nodeType":"144","messageId":"145","endLine":5,"endColumn":64},{"ruleId":"134","severity":1,"message":"135","line":28,"column":6,"nodeType":"136","endLine":28,"endColumn":8,"suggestions":"154"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.stationID'. Either include it or remove the dependency array.","ArrayExpression",["155"],"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'updateStation' is assigned a value but never used.","Identifier","unusedVar","'saveStation' is assigned a value but never used.",["156"],["157"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["158"],["159"],"'saveRecovery' is defined but never used.","'addItemToArray' is defined but never used.",["160"],{"desc":"161","fix":"162"},"no-global-assign","no-unsafe-negation",{"desc":"163","fix":"164"},{"desc":"161","fix":"165"},{"desc":"161","fix":"166"},"Update the dependencies array to be: [props.stationID]",{"range":"167","text":"168"},"Update the dependencies array to be: [authObj.password, authObj.username, checkInputValidity, inputIsValid, props]",{"range":"169","text":"170"},{"range":"171","text":"168"},{"range":"172","text":"168"},[868,870],"[props.stationID]",[3988,4031],"[authObj.password, authObj.username, checkInputValidity, inputIsValid, props]",[881,883],[920,922]]