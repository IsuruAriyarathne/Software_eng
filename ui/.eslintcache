[{"G:\\newlearnone\\Software_eng\\ui\\src\\reportWebVitals.js":"1","G:\\newlearnone\\Software_eng\\ui\\src\\index.js":"2","G:\\newlearnone\\Software_eng\\ui\\src\\App.js":"3","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Auth\\auth.js":"4","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Users\\users.js":"5","G:\\newlearnone\\Software_eng\\ui\\src\\helpers\\tableIcons.js":"6","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\listItems.js":"7","G:\\newlearnone\\Software_eng\\ui\\src\\shared\\routes.js":"8","G:\\newlearnone\\Software_eng\\ui\\src\\components\\UI\\Table\\MaterialTable\\Table.js":"9","G:\\newlearnone\\Software_eng\\ui\\src\\shared\\validate.js":"10","G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\index.js":"11","G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\auth.js":"12","G:\\newlearnone\\Software_eng\\ui\\src\\helpers\\uiHelpers.js":"13","G:\\newlearnone\\Software_eng\\ui\\src\\components\\UI\\FHTextField\\FHTextField.js":"14","G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\alert.js":"15","G:\\newlearnone\\Software_eng\\ui\\src\\store\\reducers\\alert.js":"16","G:\\newlearnone\\Software_eng\\ui\\src\\serviceWorker.js":"17","G:\\newlearnone\\Software_eng\\ui\\src\\shared\\utility.js":"18","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\UserTable.js":"19","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\WeaponsTable.js":"20","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\StationsTable.js":"21","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\CriminalWeaponsTable.js":"22","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\CriminalAmmunationTable.js":"23","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\CompaniesTable.js":"24","G:\\newlearnone\\Software_eng\\ui\\src\\shared\\consts.js":"25","G:\\newlearnone\\Software_eng\\ui\\src\\axios-SE.js":"26","G:\\newlearnone\\Software_eng\\ui\\src\\store\\reducers\\auth.js":"27","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Companies\\Companies.js":"28","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Weapons\\Weapons.js":"29","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Stations\\Stations.js":"30","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\CriminalAmmunation\\CriminalAmmunation.js":"31","G:\\newlearnone\\Software_eng\\ui\\src\\api\\utils.js":"32","G:\\newlearnone\\Software_eng\\ui\\src\\api\\WeaponsAPI.js":"33","G:\\newlearnone\\Software_eng\\ui\\src\\api\\Stations.js":"34","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\Ammunitiontable.js":"35","G:\\newlearnone\\Software_eng\\ui\\src\\api\\CompaniesAPI.js":"36","G:\\newlearnone\\Software_eng\\ui\\src\\api\\AmmunitionAPI.js":"37","G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\actionTypes.js":"38","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Ammuninition\\Ammunation.js":"39","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\CriminalWeapons\\CriminalWeapons.js":"40","G:\\newlearnone\\Software_eng\\ui\\src\\api\\UsersAPI.js":"41"},{"size":362,"mtime":1610193188697,"results":"42","hashOfConfig":"43"},{"size":1230,"mtime":1610353636239,"results":"44","hashOfConfig":"43"},{"size":1570,"mtime":1610612476314,"results":"45","hashOfConfig":"43"},{"size":5393,"mtime":1610353243454,"results":"46","hashOfConfig":"43"},{"size":2991,"mtime":1610614882873,"results":"47","hashOfConfig":"43"},{"size":2256,"mtime":1610297300436,"results":"48","hashOfConfig":"43"},{"size":1923,"mtime":1610470143167,"results":"49","hashOfConfig":"43"},{"size":335,"mtime":1610467485926,"results":"50","hashOfConfig":"43"},{"size":512,"mtime":1610297305457,"results":"51","hashOfConfig":"43"},{"size":987,"mtime":1609730397620,"results":"52","hashOfConfig":"43"},{"size":136,"mtime":1609730397623,"results":"53","hashOfConfig":"43"},{"size":2646,"mtime":1610477669033,"results":"54","hashOfConfig":"43"},{"size":1224,"mtime":1610345522524,"results":"55","hashOfConfig":"43"},{"size":567,"mtime":1610345525655,"results":"56","hashOfConfig":"43"},{"size":309,"mtime":1609730397622,"results":"57","hashOfConfig":"43"},{"size":1011,"mtime":1609730397623,"results":"58","hashOfConfig":"43"},{"size":5485,"mtime":1610353715018,"results":"59","hashOfConfig":"43"},{"size":3114,"mtime":1609730397620,"results":"60","hashOfConfig":"43"},{"size":8018,"mtime":1610475175862,"results":"61","hashOfConfig":"43"},{"size":8021,"mtime":1610475766600,"results":"62","hashOfConfig":"43"},{"size":8025,"mtime":1610475747991,"results":"63","hashOfConfig":"43"},{"size":8053,"mtime":1610475740383,"results":"64","hashOfConfig":"43"},{"size":8065,"mtime":1610475727142,"results":"65","hashOfConfig":"43"},{"size":8029,"mtime":1610475730951,"results":"66","hashOfConfig":"43"},{"size":319,"mtime":1610477807301,"results":"67","hashOfConfig":"43"},{"size":160,"mtime":1610477837633,"results":"68","hashOfConfig":"43"},{"size":1542,"mtime":1609730397623,"results":"69","hashOfConfig":"43"},{"size":1693,"mtime":1610612382271,"results":"70","hashOfConfig":"43"},{"size":1706,"mtime":1610610970119,"results":"71","hashOfConfig":"43"},{"size":1678,"mtime":1610611419600,"results":"72","hashOfConfig":"43"},{"size":1469,"mtime":1610465664465,"results":"73","hashOfConfig":"43"},{"size":1079,"mtime":1610614670769,"results":"74","hashOfConfig":"43"},{"size":413,"mtime":1610610645110,"results":"75","hashOfConfig":"43"},{"size":416,"mtime":1610611400857,"results":"76","hashOfConfig":"43"},{"size":8038,"mtime":1610612573160,"results":"77","hashOfConfig":"43"},{"size":434,"mtime":1610612601414,"results":"78","hashOfConfig":"43"},{"size":429,"mtime":1610612632441,"results":"79","hashOfConfig":"43"},{"size":252,"mtime":1609730397621,"results":"80","hashOfConfig":"43"},{"size":1691,"mtime":1610612469313,"results":"81","hashOfConfig":"43"},{"size":1460,"mtime":1610465668910,"results":"82","hashOfConfig":"43"},{"size":401,"mtime":1610614556458,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"sd8tc0",{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"89"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"89"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"89"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"89"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"89"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"89"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\newlearnone\\Software_eng\\ui\\src\\reportWebVitals.js",[],["177","178"],"G:\\newlearnone\\Software_eng\\ui\\src\\index.js",[],["179","180"],"G:\\newlearnone\\Software_eng\\ui\\src\\App.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Auth\\auth.js",["181","182","183"],"import React, { useState, useCallback}  from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { checkValidity } from '../../shared/validate';\r\nimport { updateObject, formIsValid } from '../../shared/utility';\r\nimport { buildTextFields } from '../../helpers/uiHelpers';\r\nimport { auth } from '../../store/actions/index';\r\nimport { addAlert } from '../../store/actions/index'\r\n\r\nconst inputDefinitions = {\r\n    username: {\r\n        label: 'Username*',\r\n        validations: {\r\n            required: true,\r\n            minLength: 2,\r\n            maxLength: 40,\r\n            validationErrStr: 'Use between 2 and 40 characters for your password'\r\n        }\r\n    },\r\n    password: {\r\n        label: 'Password*',\r\n        type: 'password',\r\n        validations: {\r\n            required: true,\r\n            minLength: 6,\r\n            maxLength: 40,\r\n            validationErrStr: 'Use between 6 and 40 characters for your password'\r\n        }\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  loginInput: {\r\n    width: '100%',\r\n    marginTop: '20px'\r\n  },\r\n}));\r\n\r\nfunction SignIn(props) {\r\n    const classes = useStyles();\r\n\r\n    const [inputIsValid, setInputIsValid] = useState({\r\n        username: true,\r\n        password: true\r\n    });\r\n\r\n    const [authObj, setAuthObj] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const inputProperties = {\r\n        username: {\r\n            styleClass: classes.loginInput\r\n        },\r\n        password: {\r\n            styleClass: classes.loginInput\r\n        }\r\n    };\r\n\r\n    const checkInputValidity = useCallback((inputId, newValue) => {\r\n        let isValid = true;\r\n        let validationConst = inputDefinitions[inputId].validations;\r\n        isValid = checkValidity(validationConst, newValue ? newValue : authObj[inputId])\r\n\r\n        return isValid;\r\n    }, [authObj])\r\n\r\n    const inputChangeHandler = useCallback((event, inputId) => {\r\n        let validationConst = inputDefinitions[inputId].validations;\r\n        let isValid = checkValidity(validationConst, event.target.value);\r\n        setInputIsValid(updateObject(inputIsValid, { [inputId]: isValid }));\r\n        setAuthObj(updateObject(authObj, { [inputId]: event.target.value }))\r\n    }, [authObj, inputIsValid]);\r\n\r\n    let inputFields = buildTextFields(inputDefinitions, inputProperties, inputChangeHandler, inputIsValid);\r\n\r\n    const onSubmitHandler = useCallback((event) => {\r\n        event.preventDefault()\r\n\r\n        let localInputIsValid = { ...inputIsValid };\r\n        localInputIsValid['username'] = checkInputValidity('username');\r\n        localInputIsValid['password'] = checkInputValidity('password');\r\n        setInputIsValid(localInputIsValid);\r\n\r\n        if (localInputIsValid['username'] && localInputIsValid['password']) {\r\n            console.log(authObj.email)\r\n            console.log(authObj.password)\r\n            props.onAuth(\r\n                authObj.email,\r\n                authObj.password\r\n            );\r\n        }\r\n    }, [authObj, checkInputValidity, inputIsValid]);\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <form noValidate autoComplete=\"off\" className={classes.form} onSubmit={onSubmitHandler}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography variant=\"h5\">\r\n                        Sign In\r\n                    </Typography>\r\n                    {inputFields}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // error: state.auth.error,\r\n        // loading: state.auth.loading,\r\n        // isAuthenticated: state.auth.token != null,\r\n        // authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuth: (email, password) => dispatch(auth(email, password)),\r\n        // addAlert: (alert) => dispatch(addAlert(alert))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Users\\users.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\helpers\\tableIcons.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\listItems.js",["184","185","186"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\n\r\nimport * as routez from '../../shared/routes';\r\nimport { List } from '@material-ui/core';\r\n\r\n\r\nexport const MainListItems = (\r\n  <div>\r\n    <ListItem button >\r\n      <ListItemIcon>\r\n        <PeopleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Users\" />\r\n    </ListItem>\r\n    <ListItem button >\r\n      <ListItemIcon>\r\n        <HomeIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Stations\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ArrowDropDownCircleIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Weapons\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <ArrowForwardIosIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Ammunation\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <LocationCityIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Companies\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AddCircleOutlineIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Criminal Weapons\" />\r\n    </ListItem>\r\n    <ListItem button>\r\n      <ListItemIcon>\r\n        <AddCircleOutlineIcon />\r\n      </ListItemIcon>\r\n      <ListItemText primary=\"Criminal Ammunations\" />\r\n    </ListItem>\r\n  </div>\r\n);","G:\\newlearnone\\Software_eng\\ui\\src\\shared\\routes.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\UI\\Table\\MaterialTable\\Table.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\shared\\validate.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\index.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\auth.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\helpers\\uiHelpers.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\UI\\FHTextField\\FHTextField.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\alert.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\reducers\\alert.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\serviceWorker.js",[],["187","188"],"G:\\newlearnone\\Software_eng\\ui\\src\\shared\\utility.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\UserTable.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\WeaponsTable.js",["189"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport * as routez from '../../shared/routes';\r\n\r\nimport { MainListItems } from './listItems';\r\nimport Weapons from '../../containers/Weapons/Weapons'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => history.push(`${routez.USERS}`)}>\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.STATIONS}`)}>\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Stations\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.WEAPONS}`)}>\r\n            <ListItemIcon>\r\n              <ArrowDropDownCircleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Weapons\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.AMMUNATIONS}`)}>\r\n            <ListItemIcon>\r\n              <ArrowForwardIosIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Ammunation\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.COMPANIES}`)}>\r\n            <ListItemIcon>\r\n              <LocationCityIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Companies\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.CRIMINALWEAPONS}`)}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Criminal Weapons\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.CRIMINALAMMUNATION}`)}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Criminal Ammunations\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Weapons />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\StationsTable.js",["190"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport * as routez from '../../shared/routes';\r\n\r\nimport { MainListItems } from './listItems';\r\nimport Stations from '../../containers/Stations/Stations'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => history.push(`${routez.USERS}`)}>\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.STATIONS}`)}>\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Stations\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.WEAPONS}`)}>\r\n            <ListItemIcon>\r\n              <ArrowDropDownCircleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Weapons\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.AMMUNATIONS}`)}>\r\n            <ListItemIcon>\r\n              <ArrowForwardIosIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Ammunation\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.COMPANIES}`)}>\r\n            <ListItemIcon>\r\n              <LocationCityIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Companies\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.CRIMINALWEAPONS}`)}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Criminal Weapons\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.CRIMINALAMMUNATION}`)}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Criminal Ammunations\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Stations />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\CriminalWeaponsTable.js",["191"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport * as routez from '../../shared/routes';\r\n\r\nimport { MainListItems } from './listItems';\r\nimport CriminalWeapons from '../../containers/CriminalWeapons/CriminalWeapons'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => history.push(`${routez.USERS}`)}>\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.STATIONS}`)}>\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Stations\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.WEAPONS}`)}>\r\n            <ListItemIcon>\r\n              <ArrowDropDownCircleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Weapons\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.AMMUNATIONS}`)}>\r\n            <ListItemIcon>\r\n              <ArrowForwardIosIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Ammunation\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.COMPANIES}`)}>\r\n            <ListItemIcon>\r\n              <LocationCityIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Companies\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.CRIMINALWEAPONS}`)}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Criminal Weapons\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.CRIMINALAMMUNATION}`)}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Criminal Ammunations\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <CriminalWeapons />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\CriminalAmmunationTable.js",["192"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport * as routez from '../../shared/routes';\r\n\r\nimport { MainListItems } from './listItems';\r\nimport CriminalAmmunation from '../../containers/CriminalAmmunation/CriminalAmmunation'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => history.push(`${routez.USERS}`)}>\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.STATIONS}`)}>\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Stations\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.WEAPONS}`)}>\r\n            <ListItemIcon>\r\n              <ArrowDropDownCircleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Weapons\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.AMMUNATIONS}`)}>\r\n            <ListItemIcon>\r\n              <ArrowForwardIosIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Ammunation\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.COMPANIES}`)}>\r\n            <ListItemIcon>\r\n              <LocationCityIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Companies\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.CRIMINALWEAPONS}`)}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Criminal Weapons\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.CRIMINALAMMUNATION}`)}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Criminal Ammunations\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <CriminalAmmunation />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\CompaniesTable.js",["193"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport * as routez from '../../shared/routes';\r\n\r\nimport { MainListItems } from './listItems';\r\nimport Companies from '../../containers/Companies/Companies'\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: '100%',\r\n  },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            Dashboard\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <ListItem button onClick={() => history.push(`${routez.USERS}`)}>\r\n            <ListItemIcon>\r\n              <PeopleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Users\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.STATIONS}`)}>\r\n            <ListItemIcon>\r\n              <HomeIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Stations\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.WEAPONS}`)}>\r\n            <ListItemIcon>\r\n              <ArrowDropDownCircleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Weapons\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.AMMUNATIONS}`)}>\r\n            <ListItemIcon>\r\n              <ArrowForwardIosIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Ammunation\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.COMPANIES}`)}>\r\n            <ListItemIcon>\r\n              <LocationCityIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Companies\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.CRIMINALWEAPONS}`)}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Criminal Weapons\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.CRIMINALAMMUNATION}`)}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Criminal Ammunations\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n              <Paper className={fixedHeightPaper}>\r\n                <Companies />\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n          <Box pt={4}>\r\n            <Copyright />\r\n          </Box>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","G:\\newlearnone\\Software_eng\\ui\\src\\shared\\consts.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\axios-SE.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\reducers\\auth.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Companies\\Companies.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Weapons\\Weapons.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Stations\\Stations.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\CriminalAmmunation\\CriminalAmmunation.js",["194"],"import React , {useState} from \"react\";\r\n\r\nimport Table from \"../../components/UI/Table/MaterialTable/Table\";\r\n\r\nconst LessonTable = \"Criminal Ammunation Table\";\r\n\r\nconst tableOptions = {\r\n  pageSize: 10,\r\n  pageSizeOptions: [10, 30, 50]\r\n};\r\n\r\nconst CriminalAmmunation = props => {\r\n  \r\n  const [lessons, setLessons] = useState([{id:\"null\", title:\"null\", topicid:\"null\", videoUrl:\"null\", description:\"null\",}]);\r\n\r\n  const tableColumns = [\r\n    { title: \"Id\", field: \"id\" },\r\n    { title: \"Title\", field: \"title\" },\r\n    { title: \"Topic Id\", field: \"topicid\" },\r\n    { title: \"Video URL\", field: \"videoUrl\" },\r\n    { title: \"Description\", field: \"description\" },\r\n  ];\r\n\r\n  if (false) {\r\n    //return <Spinner />\r\n  } else {\r\n    return <Table\r\n      data={lessons}\r\n      title={LessonTable}\r\n      columns={tableColumns}\r\n      tableOptions={tableOptions}\r\n      editable={{\r\n        onRowAdd: newData =>{\r\n        //   var data=({\r\n        //     \"id\": newData.id,\r\n        //     \"title\": newData.title,\r\n        //     \"topicId\": newData.topic.id,\r\n        //     \"videoUrl\": newData.videoUrl,\r\n        //     \"description\": newData.description\r\n        //   })\r\n        //   saveLesson(data)\r\n        },\r\n        onRowUpdate: (newData, oldData) =>{\r\n          //updateLesson(oldData.id, newData )\r\n        },\r\n        onRowDelete: oldData =>{\r\n          //deleteLesson(oldData.id);\r\n        },\r\n      }}\r\n    />\r\n  }\r\n};\r\n\r\nexport default (CriminalAmmunation);\r\n","G:\\newlearnone\\Software_eng\\ui\\src\\api\\utils.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\WeaponsAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\Stations.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\Ammunitiontable.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\CompaniesAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\AmmunitionAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\actionTypes.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Ammuninition\\Ammunation.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\CriminalWeapons\\CriminalWeapons.js",["195"],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\UsersAPI.js",[],{"ruleId":"196","replacedBy":"197"},{"ruleId":"198","replacedBy":"199"},{"ruleId":"196","replacedBy":"200"},{"ruleId":"198","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":13,"column":24,"nodeType":"204","messageId":"205","endLine":13,"endColumn":35},{"ruleId":"202","severity":1,"message":"206","line":16,"column":10,"nodeType":"204","messageId":"205","endLine":16,"endColumn":18},{"ruleId":"207","severity":1,"message":"208","line":122,"column":8,"nodeType":"209","endLine":122,"endColumn":51,"suggestions":"210"},{"ruleId":"202","severity":1,"message":"211","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":20},{"ruleId":"202","severity":1,"message":"212","line":15,"column":13,"nodeType":"204","messageId":"205","endLine":15,"endColumn":19},{"ruleId":"202","severity":1,"message":"213","line":16,"column":10,"nodeType":"204","messageId":"205","endLine":16,"endColumn":14},{"ruleId":"196","replacedBy":"214"},{"ruleId":"198","replacedBy":"215"},{"ruleId":"202","severity":1,"message":"216","line":35,"column":10,"nodeType":"204","messageId":"205","endLine":35,"endColumn":23},{"ruleId":"202","severity":1,"message":"216","line":35,"column":10,"nodeType":"204","messageId":"205","endLine":35,"endColumn":23},{"ruleId":"202","severity":1,"message":"216","line":35,"column":10,"nodeType":"204","messageId":"205","endLine":35,"endColumn":23},{"ruleId":"202","severity":1,"message":"216","line":35,"column":10,"nodeType":"204","messageId":"205","endLine":35,"endColumn":23},{"ruleId":"202","severity":1,"message":"216","line":35,"column":10,"nodeType":"204","messageId":"205","endLine":35,"endColumn":23},{"ruleId":"202","severity":1,"message":"217","line":14,"column":19,"nodeType":"204","messageId":"205","endLine":14,"endColumn":29},{"ruleId":"202","severity":1,"message":"217","line":14,"column":19,"nodeType":"204","messageId":"205","endLine":14,"endColumn":29},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],["218"],["219"],"no-unused-vars","'formIsValid' is defined but never used.","Identifier","unusedVar","'addAlert' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.","ArrayExpression",["220"],"'useHistory' is defined but never used.","'routez' is defined but never used.","'List' is defined but never used.",["218"],["219"],"'MainListItems' is defined but never used.","'setLessons' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},"Update the dependencies array to be: [authObj.email, authObj.password, checkInputValidity, inputIsValid, props]",{"range":"223","text":"224"},[3841,3884],"[authObj.email, authObj.password, checkInputValidity, inputIsValid, props]"]