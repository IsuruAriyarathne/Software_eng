[{"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Companies\\Companies.js":"1","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Users\\users.js":"2","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Ammuninition\\Ammunation.js":"3","G:\\newlearnone\\Software_eng\\ui\\src\\api\\utils.js":"4","G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\auth.js":"5","G:\\newlearnone\\Software_eng\\ui\\src\\store\\reducers\\auth.js":"6","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Stations\\Stations.js":"7","G:\\newlearnone\\Software_eng\\ui\\src\\api\\Stations.js":"8","G:\\newlearnone\\Software_eng\\ui\\src\\App.js":"9","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\UserTable.js":"10","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\StationsTable.js":"11","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Auth\\auth.js":"12","G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\alert.js":"13","G:\\newlearnone\\Software_eng\\ui\\src\\api\\UsersAPI.js":"14","G:\\newlearnone\\Software_eng\\ui\\src\\axios-SE.js":"15","G:\\newlearnone\\Software_eng\\ui\\src\\api\\CompaniesAPI.js":"16","G:\\newlearnone\\Software_eng\\ui\\src\\api\\WeaponsAPI.js":"17","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Weapons\\Weapons.js":"18","G:\\newlearnone\\Software_eng\\ui\\src\\api\\AmmunitionAPI.js":"19","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\Ammunitiontable.js":"20","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\WeaponsTable.js":"21","G:\\newlearnone\\Software_eng\\ui\\src\\shared\\routes.js":"22","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\RecoveryTable.js":"23","G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Recovery\\Recovery.js":"24","G:\\newlearnone\\Software_eng\\ui\\src\\api\\RecoverAPI.js":"25","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\CompaniesTable.js":"26","G:\\newlearnone\\Software_eng\\ui\\src\\index.js":"27","G:\\newlearnone\\Software_eng\\ui\\src\\store\\reducers\\alert.js":"28","G:\\newlearnone\\Software_eng\\ui\\src\\helpers\\tableIcons.js":"29","G:\\newlearnone\\Software_eng\\ui\\src\\serviceWorker.js":"30","G:\\newlearnone\\Software_eng\\ui\\src\\components\\UI\\FHTextField\\FHTextField.js":"31","G:\\newlearnone\\Software_eng\\ui\\src\\shared\\consts.js":"32","G:\\newlearnone\\Software_eng\\ui\\src\\helpers\\uiHelpers.js":"33"},{"size":3380,"mtime":1610801814263,"results":"34","hashOfConfig":"35"},{"size":3825,"mtime":1610913668228,"results":"36","hashOfConfig":"35"},{"size":2544,"mtime":1610892024505,"results":"37","hashOfConfig":"35"},{"size":1217,"mtime":1610869947780,"results":"38","hashOfConfig":"35"},{"size":3175,"mtime":1610914126743,"results":"39","hashOfConfig":"35"},{"size":1673,"mtime":1610868639195,"results":"40","hashOfConfig":"35"},{"size":2990,"mtime":1610913868407,"results":"41","hashOfConfig":"35"},{"size":416,"mtime":1610866519140,"results":"42","hashOfConfig":"35"},{"size":1366,"mtime":1610878021558,"results":"43","hashOfConfig":"35"},{"size":6035,"mtime":1610893745088,"results":"44","hashOfConfig":"35"},{"size":6047,"mtime":1610893737045,"results":"45","hashOfConfig":"35"},{"size":6314,"mtime":1610868721626,"results":"46","hashOfConfig":"35"},{"size":309,"mtime":1609730397622,"results":"47","hashOfConfig":"35"},{"size":401,"mtime":1610614556458,"results":"48","hashOfConfig":"35"},{"size":160,"mtime":1610477837633,"results":"49","hashOfConfig":"35"},{"size":434,"mtime":1610612601414,"results":"50","hashOfConfig":"35"},{"size":421,"mtime":1610870170682,"results":"51","hashOfConfig":"35"},{"size":2699,"mtime":1610996114758,"results":"52","hashOfConfig":"35"},{"size":437,"mtime":1610877033905,"results":"53","hashOfConfig":"35"},{"size":6546,"mtime":1610893523289,"results":"54","hashOfConfig":"35"},{"size":6448,"mtime":1610893719900,"results":"55","hashOfConfig":"35"},{"size":263,"mtime":1610877905999,"results":"56","hashOfConfig":"35"},{"size":6536,"mtime":1610893109728,"results":"57","hashOfConfig":"35"},{"size":4199,"mtime":1610880639065,"results":"58","hashOfConfig":"35"},{"size":426,"mtime":1610880586955,"results":"59","hashOfConfig":"35"},{"size":6540,"mtime":1610893073345,"results":"60","hashOfConfig":"35"},{"size":1230,"mtime":1610353636239,"results":"61","hashOfConfig":"35"},{"size":1011,"mtime":1609730397623,"results":"62","hashOfConfig":"35"},{"size":2256,"mtime":1610297300436,"results":"63","hashOfConfig":"35"},{"size":5485,"mtime":1610353715018,"results":"64","hashOfConfig":"35"},{"size":567,"mtime":1610345525655,"results":"65","hashOfConfig":"35"},{"size":314,"mtime":1610639933651,"results":"66","hashOfConfig":"35"},{"size":1224,"mtime":1610345522524,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"sd8tc0",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Companies\\Companies.js",[],["143","144"],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Users\\users.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Ammuninition\\Ammunation.js",["145"],"import React , {useState, useEffect, useCallback} from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport {getAllAmmunition, updateAmmunition} from \"../../api/AmmunitionAPI\"\r\nimport {replaceItemInArray} from \"../../shared/utility\";\r\nimport Table from \"../../components/UI/Table/MaterialTable/Table\";\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst AmmunitionTable = \"Ammunation Table\";\r\n\r\n\r\nconst tableOptions = {\r\n  pageSize: 10,\r\n  pageSizeOptions: [10, 30, 50]\r\n};\r\n\r\nconst Ammunation = props => {\r\n  \r\n  const [ammunition, setAmmunition] = useState([]);\r\n  useEffect(() => {\r\n    getAllAmmunition(props.stationID)\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        if (!response.error) {\r\n          // (response.data).forEach(user => setUsers(user));\r\n          setAmmunition(response.data)\r\n        }\r\n      })\r\n}, []);\r\n\r\n  const { addAlert } = props;\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const updateAmmunitions = useCallback(\r\n    (newAmmunition,oldAmmunition) => {\r\n      return new Promise((resolve, reject) => {\r\n        updateAmmunition(oldAmmunition.ammoModelID, newAmmunition)\r\n              .then((response) => {\r\n                  if (!response.error) {\r\n                      addAlert({\r\n                          message: \"Ammunition Updated Successfully!\",\r\n                      });\r\n                      setAmmunition(replaceItemInArray(ammunition, 'ammunitionID', newAmmunition, oldAmmunition.ammoModelID))\r\n                      return resolve();\r\n                  }\r\n                  return reject();\r\n              })\r\n      });\r\n    },\r\n    [addAlert, ammunition]\r\n  );\r\n\r\n\r\n  const tableColumns = [\r\n    { title: \"Ammunition Model ID\", field: \"ammoModelID\" },\r\n    { title: \"count\", field: \"count\" }, \r\n    { title: \"Assigned Date\", field: \"allocatedDate\" }, \r\n  ];\r\n\r\n  if (false) {\r\n    //return <Spinner />\r\n  } else {\r\n    return <Table\r\n    data={ammunition}\r\n    title={AmmunitionTable}\r\n    columns={tableColumns}\r\n    tableOptions={tableOptions}\r\n    editable={{\r\n      onRowUpdate: (newData, oldData) =>updateAmmunitions(newData, oldData ),\r\n    }}\r\n    />\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      error: state.auth.error,\r\n      stationID:state.auth.stationID,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addAlert: alert => dispatch(actions.addAlert(alert))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ammunation);\r\n\r\n//export default (Ammunation);\r\n",["146","147"],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\utils.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\auth.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\reducers\\auth.js",[],["148","149"],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Stations\\Stations.js",["150","151"],"import React , {useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport {getAllStations, deleteStations, updateStations, saveStations } from \"../../api/Stations\"\r\nimport Table from \"../../components/UI/Table/MaterialTable/Table\";\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst stationsTable = \"Stations Table\";\r\n\r\nconst tableOptions = {\r\n  pageSize: 10,\r\n  pageSizeOptions: [10, 30, 50]\r\n};\r\n\r\nconst Stations = props => {\r\n  \r\n  const [stations, setStations] = useState([]);\r\n  useEffect(() => {\r\n    getAllStations()\r\n        .then((response) => {\r\n          if (!response.error) {\r\n            console.log(response.data);\r\n            // (response.data).forEach(Station => setStations(Station));\r\n            setStations(response.data)\r\n          }\r\n        })\r\n  }, []);\r\n  const { addAlert } = props;\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const deleteStation = useCallback(\r\n    (stationID) => {\r\n      alert(\"You want to delete \" + stationID)\r\n      deleteStations(stationID)\r\n        .then((response) => {\r\n            console.log(response);\r\n            addAlert({\r\n              message: \"Station deletion Successful!\",\r\n            });\r\n          \r\n        })\r\n    },\r\n    [addAlert]\r\n  );\r\n\r\n  const updateStation= useCallback(\r\n    (id,data) => {\r\n      console.log(data)\r\n      updateStations(id,data)\r\n        .then((response) => {\r\n            console.log(response);\r\n            addAlert({\r\n              message: \"Station Updated Successfully!\",\r\n            });\r\n          \r\n        })\r\n    },\r\n    [addAlert]\r\n  );\r\n\r\n  const saveStation = useCallback(\r\n    (data) => {\r\n      saveStations(data)\r\n        .then((response) => {\r\n          if (!response.error){\r\n            addAlert({\r\n              message: \"Station Saved Successfully!\",\r\n            });\r\n          }else{\r\n            console.log(response.error)\r\n          }\r\n        })\r\n    },\r\n    [addAlert]\r\n  );\r\n  \r\n\r\n  const tableColumns = [\r\n    { title: \"ID\", field: \"stationID\" },\r\n    { title: \"Name\", field: \"name\" },\r\n    { title: \"Location\", field: \"location\" },\r\n    { title: \"Contact Number\", field: \"contactNo\" },\r\n\r\n  ];\r\n\r\n  if (false) {\r\n    //return <Spinner />\r\n  } else {\r\n    return <Table\r\n      data={stations}\r\n      title={stationsTable}\r\n      columns={tableColumns}\r\n      tableOptions={tableOptions}\r\n      editable={{\r\n        onRowAdd: newData => saveStations(newData),\r\n        onRowUpdate: (newData, oldData) =>updateStations(newData, oldData),\r\n        onRowDelete: oldData =>deleteStation(oldData),\r\n\r\n      }}\r\n    />\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      error: state.auth.error,\r\n      stationID:state.auth.stationID,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addAlert: alert => dispatch(actions.addAlert(alert)),\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Stations);\r\n\r\n// export default (Stations);\r\n\r\n\r\n  ","G:\\newlearnone\\Software_eng\\ui\\src\\api\\Stations.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\App.js",[],["152","153"],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\UserTable.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\StationsTable.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Auth\\auth.js",["154"],"import React, { useState, useCallback, useEffect}  from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { checkValidity } from '../../shared/validate';\r\nimport { updateObject, formIsValid } from '../../shared/utility';\r\nimport { buildTextFields } from '../../helpers/uiHelpers';\r\nimport { auth } from '../../store/actions/index';\r\nimport { addAlert } from '../../store/actions/index';\r\nimport * as routez from '../../shared/routes';\r\n\r\nconst inputDefinitions = {\r\n    username: {\r\n        label: 'Username*',\r\n        validations: {\r\n            required: true,\r\n            minLength: 0,\r\n            maxLength: 40,\r\n            validationErrStr: 'Use between 2 and 40 characters for your password'\r\n        }\r\n    },\r\n    password: {\r\n        label: 'Password*',\r\n        type: 'password',\r\n        validations: {\r\n            required: true,\r\n            minLength: 0,\r\n            maxLength: 40,\r\n            validationErrStr: 'Use between 6 and 40 characters for your password'\r\n        }\r\n    }\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  loginInput: {\r\n    width: '100%',\r\n    marginTop: '20px'\r\n  },\r\n}));\r\n\r\nfunction SignIn(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const [inputIsValid, setInputIsValid] = useState({\r\n        username: true,\r\n        password: true\r\n    });\r\n\r\n    const [authObj, setAuthObj] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const inputProperties = {\r\n        username: {\r\n            styleClass: classes.loginInput\r\n        },\r\n        password: {\r\n            styleClass: classes.loginInput\r\n        }\r\n    };\r\n\r\n    const checkInputValidity = useCallback((inputId, newValue) => {\r\n        let isValid = true;\r\n        let validationConst = inputDefinitions[inputId].validations;\r\n        isValid = checkValidity(validationConst, newValue ? newValue : authObj[inputId])\r\n\r\n        return isValid;\r\n    }, [authObj])\r\n\r\n    const inputChangeHandler = useCallback((event, inputId) => {\r\n        let validationConst = inputDefinitions[inputId].validations;\r\n        let isValid = checkValidity(validationConst, event.target.value);\r\n        setInputIsValid(updateObject(inputIsValid, { [inputId]: isValid }));\r\n        setAuthObj(updateObject(authObj, { [inputId]: event.target.value }))\r\n    }, [authObj, inputIsValid]);\r\n\r\n    let inputFields = buildTextFields(inputDefinitions, inputProperties, inputChangeHandler, inputIsValid);\r\n\r\n    const onSubmitHandler = useCallback((event) => {\r\n        event.preventDefault()\r\n\r\n        let localInputIsValid = { ...inputIsValid };\r\n        localInputIsValid['username'] = checkInputValidity('username');\r\n        localInputIsValid['password'] = checkInputValidity('password');\r\n        setInputIsValid(localInputIsValid);\r\n\r\n        if (localInputIsValid['username'] && localInputIsValid['password']) {\r\n            console.log(authObj.username)\r\n            console.log(authObj.password)\r\n            props.onAuth(\r\n                authObj.username,\r\n                authObj.password\r\n            );\r\n        }\r\n    }, [authObj, checkInputValidity, inputIsValid]);\r\n\r\n    const authError = props.error;\r\n    console.log(authError);\r\n    const addAlert = props.addAlert;\r\n    useEffect(() => {\r\n        if (authError) {\r\n            addAlert({\r\n                severity: 'error',\r\n                message: authError\r\n            });\r\n        }\r\n    }, [authError, addAlert]);\r\n\r\n    if (props.isAuthenticated){\r\n        if(props.usertype===\"Admin\"){\r\n            history.push(routez.USERS);\r\n        }else if (props.usertype===\"Officer\"){\r\n            console.log(props.stationID)\r\n            history.push(routez.WEAPONS);\r\n        } else {\r\n            history.push(routez.COMPANIES);\r\n        }\r\n    }\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <form noValidate autoComplete=\"off\" className={classes.form} onSubmit={onSubmitHandler}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon />\r\n                    </Avatar>\r\n                    <Typography variant=\"h5\">\r\n                        Sign In\r\n                    </Typography>\r\n                    {inputFields}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        disabled={!formIsValid(inputIsValid)}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        error: state.auth.error,\r\n        loading: state.auth.loading,\r\n        isAuthenticated: state.auth.token != null,\r\n        authRedirectPath: state.auth.authRedirectPath,\r\n        usertype:state.auth.usertype,\r\n        stationID:state.auth.stationID,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onAuth: (username, password) => dispatch(auth(username, password)),\r\n        addAlert: (alert) => dispatch(addAlert(alert))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","G:\\newlearnone\\Software_eng\\ui\\src\\store\\actions\\alert.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\UsersAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\axios-SE.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\CompaniesAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\WeaponsAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Weapons\\Weapons.js",["155"],"G:\\newlearnone\\Software_eng\\ui\\src\\api\\AmmunitionAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\Ammunitiontable.js",["156","157"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport clsx from 'clsx';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArrowDropDownCircleIcon from '@material-ui/icons/ArrowDropDownCircle';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport * as routez from '../../shared/routes';\r\n\r\nimport Ammunation from '../../containers/Ammuninition/Ammunation'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    backgroundColor: grey[800],\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    backgroundColor: grey[800],\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  papernav: {\r\n    height: '100%',\r\n    backgroundColor: grey[300],\r\n  },\r\n  // fixedHeight: {\r\n  //   height: '100%',\r\n  // },\r\n}));\r\n\r\nexport default function Dashboard() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [open, setOpen] = React.useState(true);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n  // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n        <Toolbar className={classes.toolbar}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            SLFire\r\n          </Typography>\r\n          <IconButton color=\"inherit\">\r\n            <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n        }}\r\n        open={open}\r\n      >\r\n        <div className={classes.toolbarIcon}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List  className={classes.papernav}>\r\n          <ListItem button onClick={() => history.push(`${routez.WEAPONS}`)}>\r\n            <ListItemIcon>\r\n              <ArrowDropDownCircleIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Weapons\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.AMMUNATIONS}`)}>\r\n            <ListItemIcon>\r\n              <ArrowForwardIosIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Ammunation\" />\r\n          </ListItem>\r\n          <ListItem button onClick={() => history.push(`${routez.RECOVERY}`)}>\r\n            <ListItemIcon>\r\n              <AddCircleOutlineIcon />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Recovery\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={3}>\r\n            {/* Chart */}\r\n            <Grid item xs={12} md={12} lg={12}>\r\n                <Ammunation />\r\n            </Grid>\r\n          </Grid>\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}","G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\WeaponsTable.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\shared\\routes.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\RecoveryTable.js",["158","159"],"G:\\newlearnone\\Software_eng\\ui\\src\\containers\\Recovery\\Recovery.js",["160","161","162"],"import React , {useState, useEffect, useCallback } from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport {getAllRecovery, deleteRecovery, updateRecovery, saveRecovery } from \"../../api/RecoverAPI\"\r\nimport {replaceItemInArray, removeItemFromArray, addItemToArray} from \"../../shared/utility\";\r\nimport Table from \"../../components/UI/Table/MaterialTable/Table\";\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst ReoveryTable = \"Recovery Table\";\r\n\r\nconst tableOptions = {\r\n  pageSize: 10,\r\n  pageSizeOptions: [10, 30, 50]\r\n};\r\n\r\nconst Users = props => {\r\n\r\n  const [recovery, setRecovery] = useState([]);\r\n  useEffect(() => {\r\n    getAllRecovery(props.stationID)\r\n        .then((response) => {\r\n          if (!response.error) {\r\n            // (response.data).forEach(user => setUsers(user));\r\n            console.log(response)\r\n            setRecovery(response.data)\r\n          }\r\n        })\r\n  }, []);\r\n   const { addAlert } = props;\r\n  // const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const deleteRecoveries = useCallback(\r\n    (oldWeapon) => {\r\n      return new Promise((resolve, reject) => {\r\n        deleteRecovery(oldWeapon.id)\r\n              .then((response) => {\r\n                console.log(response);\r\n                  if (!response.error) {\r\n                      addAlert({\r\n                          message: \"Weapon deletion Successful!\",\r\n                      });\r\n                      setRecovery(removeItemFromArray(recovery, 'id', oldWeapon.id, oldWeapon))\r\n                      return resolve();\r\n                  }\r\n                  return reject();\r\n              })\r\n      });\r\n    },\r\n    [addAlert, recovery]\r\n  );\r\n\r\n  const updateRecoveries = useCallback(\r\n    (newWeapon,oldWeapon) => {\r\n      return new Promise((resolve, reject) => {\r\n        updateRecovery(oldWeapon.id, newWeapon)\r\n              .then((response) => {\r\n                  if (!response.error) {\r\n                      addAlert({\r\n                          message: \"Weapon Updated Successfully!\",\r\n                      });\r\n                      setRecovery(replaceItemInArray(recovery, 'officerID', newWeapon, oldWeapon.id))\r\n                      return resolve();\r\n                  }\r\n                  return reject();\r\n              })\r\n      });\r\n    },\r\n    [addAlert, recovery]\r\n  );\r\n\r\n  // const saveRecoveries = useCallback(\r\n  //   (newUser) => {\r\n  //     var data=({\r\n  //       \"officerID\": newUser.officerID,\r\n  //       \"name\": newUser.name,\r\n  //       \"location\": newUser.location,\r\n  //       \"stationID\": newUser.stationID,\r\n  //     })\r\n  //     return new Promise((resolve, reject) => {\r\n  //       saveRecovery(data)\r\n  //             .then((response) => {\r\n  //                 if (!response.error) {\r\n  //                     addAlert({\r\n  //                         message: \"User Saved Successfully!\",\r\n  //                     });\r\n  //                     setRecovery(addItemToArray(recovery, data))\r\n  //                     return resolve();\r\n  //                 }\r\n  //                 return reject();\r\n  //             })\r\n  //       });\r\n  //   },\r\n  //   [addAlert, recovery]\r\n  // );\r\n  \r\n\r\n  const tableColumns = [\r\n    { title: \"Recovery ID\", field: \"recoveryID\" },\r\n    { title: \"Recovery Date\", field: \"recoveryDate\" },\r\n    { title: \"Description\", field: \"description\" },\r\n    { title: \"ststion Id\", field: \"stationID\" },\r\n  ];\r\n\r\n  if (false) {\r\n    //return <Spinner />\r\n  } else {\r\n    return <Table\r\n      data={recovery}\r\n      title={ReoveryTable}\r\n      columns={tableColumns}\r\n      tableOptions={tableOptions}\r\n      editable={{\r\n        // onRowAdd: newData =>saveRecoveries(newData),\r\n        onRowUpdate: (newData, oldData) =>updateRecoveries(newData, oldData ),\r\n        onRowDelete: oldData => deleteRecoveries(oldData),\r\n      }}\r\n    />\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      error: state.auth.error,\r\n      stationID:state.auth.stationID,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addAlert: alert => dispatch(actions.addAlert(alert))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\r\n\r\n// export default (Users);\r\n","G:\\newlearnone\\Software_eng\\ui\\src\\api\\RecoverAPI.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\Navbar\\CompaniesTable.js",["163","164"],"G:\\newlearnone\\Software_eng\\ui\\src\\index.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\store\\reducers\\alert.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\helpers\\tableIcons.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\serviceWorker.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\components\\UI\\FHTextField\\FHTextField.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\shared\\consts.js",[],"G:\\newlearnone\\Software_eng\\ui\\src\\helpers\\uiHelpers.js",[],{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","severity":1,"message":"170","line":29,"column":4,"nodeType":"171","endLine":29,"endColumn":6,"suggestions":"172"},{"ruleId":"165","replacedBy":"173"},{"ruleId":"167","replacedBy":"174"},{"ruleId":"165","replacedBy":"175"},{"ruleId":"167","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":46,"column":9,"nodeType":"179","messageId":"180","endLine":46,"endColumn":22},{"ruleId":"177","severity":1,"message":"181","line":61,"column":9,"nodeType":"179","messageId":"180","endLine":61,"endColumn":20},{"ruleId":"165","replacedBy":"182"},{"ruleId":"167","replacedBy":"183"},{"ruleId":"169","severity":1,"message":"184","line":125,"column":8,"nodeType":"171","endLine":125,"endColumn":51,"suggestions":"185"},{"ruleId":"169","severity":1,"message":"170","line":28,"column":6,"nodeType":"171","endLine":28,"endColumn":8,"suggestions":"186"},{"ruleId":"177","severity":1,"message":"187","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":11},{"ruleId":"177","severity":1,"message":"188","line":19,"column":8,"nodeType":"179","messageId":"180","endLine":19,"endColumn":12},{"ruleId":"177","severity":1,"message":"187","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":11},{"ruleId":"177","severity":1,"message":"188","line":19,"column":8,"nodeType":"179","messageId":"180","endLine":19,"endColumn":12},{"ruleId":"177","severity":1,"message":"189","line":4,"column":57,"nodeType":"179","messageId":"180","endLine":4,"endColumn":69},{"ruleId":"177","severity":1,"message":"190","line":5,"column":50,"nodeType":"179","messageId":"180","endLine":5,"endColumn":64},{"ruleId":"169","severity":1,"message":"170","line":28,"column":6,"nodeType":"171","endLine":28,"endColumn":8,"suggestions":"191"},{"ruleId":"177","severity":1,"message":"187","line":9,"column":8,"nodeType":"179","messageId":"180","endLine":9,"endColumn":11},{"ruleId":"177","severity":1,"message":"188","line":19,"column":8,"nodeType":"179","messageId":"180","endLine":19,"endColumn":12},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.stationID'. Either include it or remove the dependency array.","ArrayExpression",["194"],["192"],["193"],["192"],["193"],"no-unused-vars","'updateStation' is assigned a value but never used.","Identifier","unusedVar","'saveStation' is assigned a value but never used.",["192"],["193"],"React Hook useCallback has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useCallback call and refer to those specific props inside useCallback.",["195"],["196"],"'Box' is defined but never used.","'Link' is defined but never used.","'saveRecovery' is defined but never used.","'addItemToArray' is defined but never used.",["197"],"no-global-assign","no-unsafe-negation",{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},{"desc":"198","fix":"202"},{"desc":"198","fix":"203"},"Update the dependencies array to be: [props.stationID]",{"range":"204","text":"205"},"Update the dependencies array to be: [authObj.password, authObj.username, checkInputValidity, inputIsValid, props]",{"range":"206","text":"207"},{"range":"208","text":"205"},{"range":"209","text":"205"},[868,870],"[props.stationID]",[3988,4031],"[authObj.password, authObj.username, checkInputValidity, inputIsValid, props]",[881,883],[920,922]]